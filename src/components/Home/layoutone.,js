import {React, useEffect }from 'react';
import Contact from './Contact';
import About from './About';
import '../../style/home.css';
import Work from './Work';
import { Link as ScrollLink, animateScroll as scroll } from 'react-scroll';
import { Link, useLocation } from 'react-router-dom';


const Home = () => {
  const location = useLocation();

  const handleNavClick = (section) => {
    if (location.pathname !== '/') {
      window.location.href = `/#${section}`;
    } else {
      if (section === 'work') {
        scroll.scrollTo(document.getElementById('contact').offsetTop, {
          duration: 500,
          smooth: true,
        });
      } else {
        scroll.scrollTo(document.getElementById(section).offsetTop, {
          duration: 500,
          smooth: true,
        });
      }
    }
  };



  useEffect(() => {
    let x1 = 0, y1 = 0;

    const vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0);
    const dist_to_draw = 50;
    const delay = 1000;
    const fsize = ['1.1rem', '1.4rem', '.8rem', '1.7rem'];
    const colors = [
      '#E23636',
      '#F9F3EE',
      '#E1F8DC',
      '#B8AFE6',
      '#AEE1CD',
      '#5EB0E5'
    ];

    const rand = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;
    const selRand = (o) => o[rand(0, o.length - 1)];
    const distanceTo = (x1, y1, x2, y2) => Math.sqrt((Math.pow(x2 - x1, 2)) + (Math.pow(y2 - y1, 2)));
    const shouldDraw = (x, y) => (distanceTo(x1, y1, x, y) >= dist_to_draw);

    const addStr = (x, y) => {
      const str = document.createElement("div");
      str.innerHTML = '&#10022;';
      str.className = 'star';
      str.style.top = `${y + rand(-20, 20)}px`;
      str.style.left = `${x}px`;
      str.style.color = selRand(colors);
      str.style.fontSize = selRand(fsize);
      document.getElementById('mouse-trail').appendChild(str);

      const fs = 10 + 5 * parseFloat(getComputedStyle(str).fontSize);
      str.animate({
        translate: `0 ${(y + fs) > vh ? vh - y : fs}px`,
        opacity: 0,
        transform: `rotateX(${rand(1, 500)}deg) rotateY(${rand(1, 500)}deg)`
      }, {
        duration: delay,
        fill: 'forwards',
      });

      setTimeout(() => {
        str.remove();
      }, delay);
    };

    const mouseMoveHandler = (e) => {
      const { clientX, clientY } = e;
      if (shouldDraw(clientX, clientY)) {
        addStr(clientX, clientY);
        x1 = clientX;
        y1 = clientY;
      }
    };

    document.addEventListener("mousemove", mouseMoveHandler);

    return () => {
      document.removeEventListener("mousemove", mouseMoveHandler);
    };
  }, [])
  return (
    <>

         <div id="mouse-trail" className="mouse-trail"></div>
      <section className="home pb-5 d-flex justify-content-center align-items-center"> {/* Updated classes for centering */}
        <div className="container-fluid">
          <div className="row">
            <div className="col-md-6 mt-5 py-3 text-center"> {/* Added 'text-center' class */}
              <h1 className="mainTxt text-white fw-bold">Caffeine-Powered Coding:<span className="text-white"> Since 2018</span></h1>
              <br />
              <p className="text-white fs-5 fst-italic">Crafting Tomorrow's Digital World Today: Where Innovation Meets Design</p>
              <br />
              <a href="/Note" className="Hbtn btn-white fw-bold fs-5">Dig into my universe</a>
              <a  onClick={() => handleNavClick('Work')} className="Hbtn btn-white ms-2 fw-bold fs-5">See Services</a>
             
            </div>
          </div>
        </div>
      </section>

      <section id="about">
        <About />
        <section id="Work">
        <Work />
      </section>
      </section>
      <section id="contact">
        <Contact />
      </section>
    </>
  );
};

export default Home;


css
/* Header Styles */
.section {
  padding: 100px 20px;
  height: 100vh;
}

.header {
  position: fixed;
  top: 3%;
  left: 10%;
  width: 80%;
  height: 60px;
  z-index: 1000;
  background-color: #383737;
  transition: all 0.3s ease;
  border-radius: 20px;
  
}

.header-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-right: 60px;
  color: #fff;
}

.sticky {
  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
}

.logo h3 {
  margin: 0;
}

.menu-button {
  display: none; /* Hide initially on larger screens */
  color: #fff;
  padding-left: 10px;
}

.menu-icon {
  width: 30px;
  height: 3px;padding: 1px;
  background-color: #fff;
  transition: all 0.3s ease;
}

.menu-icon2 {
  width: 30px;
  height: 3px;padding: 1px;
  background-color: #383737;
  transition: all 0.3s ease;
}

.menu-icon.open {
  transform: rotate(30deg);
}

.list-items {
  display: flex;
  list-style: none;
}

.list-items ul {
  padding: 0;
  margin: 0;
  display: flex;
}

.list-items ul li {
  padding: 0px 15px;
  list-style: none; /* Remove dot from links */

}

.list-items ul li a {
  text-decoration: none;
  color: white;
  font-size: 1rem;
  font-weight: 500;
  position: relative;

}

.list-items ul li a:hover {
  text-decoration: none;
  color: white;
  font-size: 1rem;
  font-weight: 500;
  position: relative;
  border-bottom: 1px solid transparent; /* Start with a transparent border */
  cursor: grab;
  transition: border-bottom 0.3s ease; /* Add transition for the border */
}

.list-items ul li a:hover::after {
  content: "";
  position: absolute;
  left: 0;
  bottom: -1px;
  width: 100%;
  height: 1px;
  background-color: white; /* Color of the border */
  transition: width 0.3s ease; /* Add transition for the border width */
}

.list-items ul li a:hover::after {
  width: 100%; /* Make the border fully appear on hover */
}



.list-items ul li a:hover::before {
  width: 100%;

}

.right-content {
  display: flex;
  align-items: center; /* Center the button vertically */
  padding-top: 5px;
}

.right-content button {
 align-items: center;
  background-color: transparent;
  color: #fff;
  border: 2px solid #fff;
  padding: 8px 15px 8px 15px;
  border-radius: 5px;
  cursor: pointer;
  transition: all 0.3s ease;
  border-radius: 20px;
}

.right-content button:hover {
  background-color: #fff;
  color: #000;
  border-color: #000;
}

@media only screen and (max-width: 900px) {
  .header {
    position: fixed;
    top: 3%;
    left: 10%;
    width: 80%;
    height: 40px;
    z-index: 1000;
    background-color: #383737;
    transition: all 0.3s ease;
    border-radius: 20px;
    
  }

  .logo h3 {
    margin: 0;
    font-size: 20px;
  }

  .menu-button {
    display: block; /* Show on smaller screens */
  }

  .list-items {
    display: none;
    flex-direction: row;
    position: absolute;
    top: 100%;
    font-size: 20px;
    background-color: #383737;
    width: 80%;
    z-index: 100;
    border-radius: 10px;

  
  }

  .list-items.active {
    display: flex;
    align-items: center;
  }



  .list-items ul li a {
    color: #fff;
    font-size: 0.8rem; /* Increase font size */
  }

  .list-items ul li a::after {
    content: "";
    position: absolute;
    left: 0;
    width: 0; /* Initially, the line has zero width */
    height: 2px;
    background-color: #fff; /* Color of the line */
    transition: width 0.3s ease; /* Transition for smooth animation */
  }
  
  .list-items ul li a.active::after {
    width: 100%; /* When the link is active, the line spans the full width */
  }

  .sticky .menu-icon {
    background-color: #fff;
  }

  .right-content button {
    align-items: center;
     background-color: transparent;
     color: #fff;
     font-size: 10px;
     border: 2px solid #fff;
     padding: 5px 10px 5px 10px;
     border-radius: 5px;
     cursor: pointer;
     transition: all 0.3s ease;
     border-radius: 20px;
   }
}




@media only screen and (max-width: 490px) {
  .header {
    display: flex;
    align-items: center;
    position: fixed;
    top: 2%;
    left: 10%;
    width: 70%;
    height: 70px;
    z-index: 1000;
    background-color: #383737;
    transition: all 0.3s ease;
    border-radius: 20px;
    
  }

  .right-content button{
    font-size: 5px;
  }

  .logo h3 {
    margin: 0;
    font-size: 15px;
    padding-left: 10px;
    padding-right: 10px;
  }

  .menu-button {
    display: block; /* Show on smaller screens */
  }

  .list-items {
    display: none;
    flex-direction: row;
    position: absolute;
    top: 100%;
    font-size: 20px;
    background-color: #383737;
    width: 80%;
    z-index: 100;
    border-radius: 10px;

  
  }

  .list-items.active {
    display: flex;
    align-items: center;
  }



  .list-items ul li a {
    color: #fff;
    font-size: 0.8rem; /* Increase font size */
  }

  .list-items ul li a::after {
    content: "";
    position: absolute;
    left: 0;
    width: 0; /* Initially, the line has zero width */
    height: 2px;
    background-color: #fff; /* Color of the line */
    transition: width 0.3s ease; /* Transition for smooth animation */
  }
  
  .list-items ul li a.active::after {
    width: 100%; /* When the link is active, the line spans the full width */
  }

  .sticky .menu-icon {
    background-color: #fff;
  }

  .right-content button {
    align-items: center;
     background-color: transparent;
     color: #fff;
     font-size: 10px;
     border: 2px solid #fff;
     padding: 5px 10px 5px 10px;
     border-radius: 5px;
     cursor: pointer;
     transition: all 0.3s ease;
     border-radius: 20px;
   }
}


///home////////////////////////////////////


  <section className="home pb-5 d-flex justify-content-center align-items-center"> {/* Updated classes for centering */}
        <div className="container-fluid">
          <div className="row">
            <div className="col-md-6 mt-5 py-3 text-center"> {/* Added 'text-center' class */}
              <h1 className="mainTxt text-white fw-bold">Caffeine-Powered Coding:<span className="text-white"> Since 2018</span></h1>
              <br />
              <p className="text-white fs-5 fst-italic">Crafting Tomorrow's Digital World Today: Where Innovation Meets Design</p>
              <br />
              <a href="/Note" className="Hbtn btn-white fw-bold fs-5">Dig into my universe</a>
              <a  onClick={() => handleNavClick('Work')} className="Hbtn btn-white ms-2 fw-bold fs-5">See Services</a>
             
            </div>
          </div>
        </div>
      </section>




      /////////////////////////chatbot


        useEffect(() => {
    let qNumb = 0;
    const output = document.getElementById('unique-output');
    let question = '<h1>Hello, My name is Nirajan. What is your name?</h1>';
    output.innerHTML = question;

    const chatBot = () => {
      const input = document.getElementById('unique-input').value;

      switch (qNumb) {
        case 0:
          output.innerHTML = `<h1>Awesome! Great to meet you, ${input}.</h1>`;
          question = '<h1>Where are you from?</h1>';
          break;
        case 1:
          output.innerHTML = '<h1>Cool. I am in Kathmandu.</h1>';
          question = '<h1>What do you like to do for fun there?</h1>';
          break;
        case 2:
          output.innerHTML = '<h1>Sounds like fun! I like to go to the Zoo here in Lalitpur.</h1>';
          question = '<h1>What kind of animal is your favorite?</h1>';
          break;
        case 3:
          output.innerHTML = `<h1>I like ${input} too.</h1>`;
          question = '<h1>What else is fun in your city?</h1>';
          break;
        case 4:
          output.innerHTML = '<h1>Sweet! That is great.</h1>';
          question = '<h1>What kind of work do you do?</h1>';
          break;
        case 5:
          output.innerHTML = '<h1>That sounds interesting. I do web design.</h1>';
          question = '<h1>Do you like your work?</h1>';
          break;
        case 6:
          output.innerHTML = input.toLowerCase() === "yes"
            ? '<h1>Awesome!</h1>'
            : '<h1>Bummer! Sorry to hear that.</h1>';
          question = '<h1>Well, I have to go. Have a great day. Hope to talk again!</h1>';
          break;
        default:
          break;
      }

      document.getElementById('unique-input').value = "";
      setTimeout(() => output.innerHTML = question, 3000);
      qNumb++;
    };

    const pressKey = (event) => {
      if (event.which === 13) {
        chatBot();
      }
    };

    document.getElementById('unique-input').addEventListener('keypress', pressKey);

    return () => {
      document.getElementById('unique-input').removeEventListener('keypress', pressKey);
    };
  }, []);


    <section className="unique-chatbot">
        <div className="unique-container">
          <img src="https://th.bing.com/th/id/OIP.K2zUmpCpSE0eLQJ2j5fvrQHaEK?rs=1&pid=ImgDetMain" alt="Chatbot" />
          <div id="unique-output"></div>
        </div>
        <div className="unique-container">
          <input type="text" id="unique-input" placeholder="Let's get to know each other..." />
        </div>
      </section>


      .unique-chatbot {
  padding-top: 20%;
}

.unique-container h1 {
  font-size: 28px;
  color: black;
}

.unique-container {
  display: flex;
  width: 500px;
  border: #00796b;
  margin: 0 auto;
  align-items: center;
}

.unique-container img {
  width: 60px;
  height: 60px;
  border-radius: 50%;
}

input[type="text"] {
  width: 100%;
  padding: 25px;
  font-size: 18px;
  border-radius: 5px;
  border: solid;
}

#unique-output {
  background-color: white;
  padding: 15px;
  border-radius: 100px;
  margin-bottom: 30px;
  width: 100%;
  position: relative;
}

#unique-output:before {
  content: '';
  width: 0;
  height: 0;
  border-left: 30px solid transparent;
  border-right: 30px solid transparent;
  border-top: 40px solid white;
  position: absolute;
  bottom: -25px;
  left: 35%;
  transform: rotate(-25deg);
}

.unique-avatar img {
  width: 60px;
  border-radius: 100px;
  margin-bottom: 20px;
}

.unique-download-resume-btn {
  background-color: #009688;
  color: white;
  padding: 10px 30px;
  border: none;
  border-radius: 5px;
  margin-top: 20px;
  cursor: pointer;
}

.unique-download-resume-btn:hover {
  background-color: #00796b;
}




      .unique-footer {
  position: fixed;
  width: 100%;
  text-align: center;
  top: 100%;
  padding-top: 1%;
  transform: translateY(-100%);
  font-size: 25px;
  font-weight: bold;
  background: #0652dd;
  color: #ecf0f1;
}

.unique-header {
  position: fixed;
  width: 100%;
  margin-bottom: 20%;
  vertical-align: center;
  text-align: center;
  padding-top: 1%;
  font-size: 25px;
  font-weight: bold;
  background: #2c3e50;
  color: #ecf0f1;
}

.unique-span {
  font-style: italic;
  font-weight: normal;
  font-size: 18px;
}

@media only screen and (max-width: 900px) {
  .unique-container {
    width: 600px;
    border: #00796b;
  }

  .unique-chatbot {
    padding-top: 20%;
  }

  #unique-output {
    background-color: white;
    padding: 15px;
    border-radius: 100px;
    margin-bottom: 20px;
    width: 60%;
    position: relative;
  }

  .unique-container h1 {
    font-size: 20px;
    color: black;
  }

  .unique-avatar img {
    display: flex;
    width: 40px;
    border-radius: 100px;
    margin-bottom: 10px;
  }
}

@media only screen and (max-width: 400px) {
  .unique-container {
    width: 350px;
    border: #00796b;
  }

  #unique-output {
    background-color: white;
    padding: 15px;
    border-radius: 100px;
    margin-bottom: 20px;
    width: 60%;
    position: relative;
  }

  .unique-chatbot {
    padding-top: 60%;
    align-items: center;
    justify-content: center;
  }

  .unique-container h1 {
    font-size: 10px;
    color: black;
  }

  .unique-avatar img {
    display: flex;
    width: 50px;
    border-radius: 100px;
    margin-bottom: 10px;
  }
}




